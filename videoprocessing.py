# -*- coding: utf-8 -*-
"""VideoProcessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y4snZKkq0qytYvrMf1vVrsTbGEiLElDH
"""

import cv2
import numpy as np
import IPython.display as ipd
from moviepy.editor import *
import matplotlib.pyplot as plt

#Play the video file using moviepy
from moviepy.editor import *
clip=VideoFileClip("/content/bus_cif.y4m")
clip.ipython_display()

# Read the video and save the frames in a list
new = cv2.VideoCapture('/content/bus_cif.y4m') 

images=[] #Create a list to store all the extracted frames

#Read each frame in the video
while(new.isOpened()):
    ret, frame = new.read()
    if ret == False:
        break
    # saving each frame in images list
    images.append(frame)

new.release()

#Convert the list to numpy array
images=np.array(images)
len(images)

img=images[2]
plt.imshow(images[2]) #show a particular frame in the video

"""####Erosion on video frames"""

# Applying Erosion on frames 30-40
img_erode=images.copy()
for i in range(30,41):
  kernel = np.ones((5,5),np.uint8)
  img_erode[i]= cv2.erode(images[i],kernel)

m,n,p= img_erode[0].shape  #size of each frame
print(m,n)

#Eroded Image
plt.imshow(img_erode[35])

#Reconstructing video with eroded frames
out = cv2.VideoWriter('/content/erode_video.avi',cv2.VideoWriter_fourcc(*'DIVX'), 15, (n,m))
for i in range(len(images)):
    out.write(img_erode[i])
out.release()

clip=VideoFileClip('/content/erode_video.avi')
clip.ipython_display()
#the vid3eo is played slow bec the original video had 30 fps and the result video has 15fps

"""####Dilation on video frames"""

# Applying Dilation on frames 30-40
img_dilate=images.copy()
for i in range(30,41):
  kernel = np.ones((5,5),np.uint8)
  img_dilate[i]= cv2.dilate(images[i],kernel)

#Eroded Image
plt.imshow(img_dilate[35])

#Reconstructing video with dilated frames
out = cv2.VideoWriter('/content/dilate_video.avi',cv2.VideoWriter_fourcc(*'DIVX'), 30, (n,m))
for i in range(len(images)):
    out.write(img_dilate[i])
out.release()

clip=VideoFileClip('/content/dilate_video.avi')
clip.ipython_display()

! jupyter nbconvert --to html /content/I078_SIP_Prac10.ipynb

"""###Conclusion
Applied erosion and dilation on particular video frames of a video. The frames of a video are images and applying erosion and dilation on then yields same results as obtained in the erosion dilation experiment of image processing.
"""