# -*- coding: utf-8 -*-
"""SamplingTechniques.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ih3WApBaZTRVXP2CwCvMSJjj6S2e7c3P
"""

import numpy as np
import matplotlib.pyplot as plt
import cv2

img=cv2.imread("/content/cameraman.tif",0)

#Original Image
plt.imshow(img,cmap="gray")

"""###Down-Sampling"""

nrows,ncols=img.shape   #storing no. of rows,cols of the img array in variables

fs=int(input("Enter Sampling Rate:"))
down_img=np.zeros(((nrows//fs),(ncols//fs)))
for i in range(nrows//fs):
  for j in range(ncols//fs):   #skipping rows n cols on a fixed interval i.e fs and storing it in another array.
    r=i*fs
    c=j*fs
    down_img[i,j]=img[r,c]

#Down-Sampled Image
 plt.imshow(down_img,cmap="gray")

"""###Downscale Greyscale Resolution:"""

import math 
max_level=img.max()
k=round(math.log(max_level,2))
b=int(input("Enter no. of bits for new image:"))
down_img1=np.zeros((nrows,ncols))
for i in range(nrows):
  for j in range(ncols):   #reducing intensity level for the image
     down_img1[i,j]=int(((2**b)/(2**k))*img[i,j])

#Down-Greyscaled Image
plt.imshow(down_img1,cmap="gray")

! jupyter nbconvert --to html /content/I078_SIP_Prac3.ipynb

"""###Conclusion:
Task 1:Performed Downscale Sampling on an image i.e reducing the pixels of the image. It is basically taking a part of image from all portions of an image in equality, that is skipping rows and cols of the original image array in a fixed interval(inputed as sampling rate). Hence, the new image is smaller in pixels and the quality also decreased(depends on the sampling rate).

Task 2:Performed Downscale Greyscale resolution on the same image. Greyscale resolution typically refers to the shades of grey in a particular image and down sampling it is basically changing the intensity of the shades in that image. For this, bits(which represents the max intensity in the image) required in the new image were inputed and the image was obtained from the original image. The newer image appeared differently shaded depending on the bits inputed.In case of bits inputed as 1, it appeared tending to black and white.
"""